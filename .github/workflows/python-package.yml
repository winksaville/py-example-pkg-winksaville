# From: https://github.com/actions/starter-workflows/blob/1e1b67d2e3189ba0f5730362d0caadecfd68c77f/ci/python-package.yml
# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
# tickle 1

name: Python package

on: [ push, pull_request, workflow_dispatch ]

jobs:
  build:

    name: Linux build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        #python-version: [3.5, 3.6, 3.7, 3.8]
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache-dir
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Display pip cache dir
        run: echo steps.pip-cache-dir.outputs.dir=${{ steps.pip-cache-dir.outputs.dir }}

      - name: Pip cache
        id: pip-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Display pip cache-hit
        run: echo steps.pip-cache.outputs.cache-hit=${{ steps.pip-cache.outputs.cache-hit }}

      - name: Install dependencies
        if: steps.pip-cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
